//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Process_APP_Desk.ServiceProcess_Empresa {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceProcess_Empresa.Process_EmpresaSoap")]
    public interface Process_EmpresaSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarEmpresaConEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertarEmpresaConEntidad_Escritorio(System.Data.DataSet _unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarEmpresaConEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<int> InsertarEmpresaConEntidad_EscritorioAsync(System.Data.DataSet _unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarEmpresaSinEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertarEmpresaSinEntidad_Escritorio(string _rut_empresa, string _nombre, string _giro, string _direccion, int _estado, int _id_comuna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarEmpresaSinEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<int> InsertarEmpresaSinEntidad_EscritorioAsync(string _rut_empresa, string _nombre, string _giro, string _direccion, int _estado, int _id_comuna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEmpresaConEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ActualizarEmpresaConEntidad_Escritorio(System.Data.DataSet _unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEmpresaConEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarEmpresaConEntidad_EscritorioAsync(System.Data.DataSet _unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEmpresaSinEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ActualizarEmpresaSinEntidad_Escritorio(string _rut_empresa, string _nombre, string _giro, string _direccion, int _estado, int _id_comuna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEmpresaSinEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarEmpresaSinEntidad_EscritorioAsync(string _rut_empresa, string _nombre, string _giro, string _direccion, int _estado, int _id_comuna);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEmpresaSinEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TraerEmpresaSinEntidad_Escritorio(string _rut_empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEmpresaSinEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TraerEmpresaSinEntidad_EscritorioAsync(string _rut_empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEmpresaConEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Process_APP_Desk.ServiceProcess_Empresa.Empresa TraerEmpresaConEntidad_Escritorio(string _rut_empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEmpresaConEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<Process_APP_Desk.ServiceProcess_Empresa.Empresa> TraerEmpresaConEntidad_EscritorioAsync(string _rut_empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerTodasEmpresas_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TraerTodasEmpresas_Escritorio();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerTodasEmpresas_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TraerTodasEmpresas_EscritorioAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Empresa : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string rut_empresaField;
        
        private string nombreField;
        
        private string giroField;
        
        private string direccionField;
        
        private int estadoField;
        
        private int id_comunaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Rut_empresa {
            get {
                return this.rut_empresaField;
            }
            set {
                this.rut_empresaField = value;
                this.RaisePropertyChanged("Rut_empresa");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
                this.RaisePropertyChanged("Nombre");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Giro {
            get {
                return this.giroField;
            }
            set {
                this.giroField = value;
                this.RaisePropertyChanged("Giro");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Direccion {
            get {
                return this.direccionField;
            }
            set {
                this.direccionField = value;
                this.RaisePropertyChanged("Direccion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Estado {
            get {
                return this.estadoField;
            }
            set {
                this.estadoField = value;
                this.RaisePropertyChanged("Estado");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int Id_comuna {
            get {
                return this.id_comunaField;
            }
            set {
                this.id_comunaField = value;
                this.RaisePropertyChanged("Id_comuna");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Process_EmpresaSoapChannel : Process_APP_Desk.ServiceProcess_Empresa.Process_EmpresaSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Process_EmpresaSoapClient : System.ServiceModel.ClientBase<Process_APP_Desk.ServiceProcess_Empresa.Process_EmpresaSoap>, Process_APP_Desk.ServiceProcess_Empresa.Process_EmpresaSoap {
        
        public Process_EmpresaSoapClient() {
        }
        
        public Process_EmpresaSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Process_EmpresaSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Process_EmpresaSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Process_EmpresaSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertarEmpresaConEntidad_Escritorio(System.Data.DataSet _unidad) {
            return base.Channel.InsertarEmpresaConEntidad_Escritorio(_unidad);
        }
        
        public System.Threading.Tasks.Task<int> InsertarEmpresaConEntidad_EscritorioAsync(System.Data.DataSet _unidad) {
            return base.Channel.InsertarEmpresaConEntidad_EscritorioAsync(_unidad);
        }
        
        public int InsertarEmpresaSinEntidad_Escritorio(string _rut_empresa, string _nombre, string _giro, string _direccion, int _estado, int _id_comuna) {
            return base.Channel.InsertarEmpresaSinEntidad_Escritorio(_rut_empresa, _nombre, _giro, _direccion, _estado, _id_comuna);
        }
        
        public System.Threading.Tasks.Task<int> InsertarEmpresaSinEntidad_EscritorioAsync(string _rut_empresa, string _nombre, string _giro, string _direccion, int _estado, int _id_comuna) {
            return base.Channel.InsertarEmpresaSinEntidad_EscritorioAsync(_rut_empresa, _nombre, _giro, _direccion, _estado, _id_comuna);
        }
        
        public int ActualizarEmpresaConEntidad_Escritorio(System.Data.DataSet _unidad) {
            return base.Channel.ActualizarEmpresaConEntidad_Escritorio(_unidad);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarEmpresaConEntidad_EscritorioAsync(System.Data.DataSet _unidad) {
            return base.Channel.ActualizarEmpresaConEntidad_EscritorioAsync(_unidad);
        }
        
        public int ActualizarEmpresaSinEntidad_Escritorio(string _rut_empresa, string _nombre, string _giro, string _direccion, int _estado, int _id_comuna) {
            return base.Channel.ActualizarEmpresaSinEntidad_Escritorio(_rut_empresa, _nombre, _giro, _direccion, _estado, _id_comuna);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarEmpresaSinEntidad_EscritorioAsync(string _rut_empresa, string _nombre, string _giro, string _direccion, int _estado, int _id_comuna) {
            return base.Channel.ActualizarEmpresaSinEntidad_EscritorioAsync(_rut_empresa, _nombre, _giro, _direccion, _estado, _id_comuna);
        }
        
        public System.Data.DataSet TraerEmpresaSinEntidad_Escritorio(string _rut_empresa) {
            return base.Channel.TraerEmpresaSinEntidad_Escritorio(_rut_empresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TraerEmpresaSinEntidad_EscritorioAsync(string _rut_empresa) {
            return base.Channel.TraerEmpresaSinEntidad_EscritorioAsync(_rut_empresa);
        }
        
        public Process_APP_Desk.ServiceProcess_Empresa.Empresa TraerEmpresaConEntidad_Escritorio(string _rut_empresa) {
            return base.Channel.TraerEmpresaConEntidad_Escritorio(_rut_empresa);
        }
        
        public System.Threading.Tasks.Task<Process_APP_Desk.ServiceProcess_Empresa.Empresa> TraerEmpresaConEntidad_EscritorioAsync(string _rut_empresa) {
            return base.Channel.TraerEmpresaConEntidad_EscritorioAsync(_rut_empresa);
        }
        
        public System.Data.DataSet TraerTodasEmpresas_Escritorio() {
            return base.Channel.TraerTodasEmpresas_Escritorio();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TraerTodasEmpresas_EscritorioAsync() {
            return base.Channel.TraerTodasEmpresas_EscritorioAsync();
        }
    }
}
