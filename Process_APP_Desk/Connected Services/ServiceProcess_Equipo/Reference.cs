//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Process_APP_Desk.ServiceProcess_Equipo {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceProcess_Equipo.Process_EquipoSoap")]
    public interface Process_EquipoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarEquipoSinEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int InsertarEquipoSinEntidad_Escritorio(string _nombre, int _id_unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarEquipoSinEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<int> InsertarEquipoSinEntidad_EscritorioAsync(string _nombre, int _id_unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEquipoSinEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ActualizarEquipoSinEntidad_Escritorio(int _id_equipo, string _nombre, int _id_unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEquipoSinEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ActualizarEquipoSinEntidad_EscritorioAsync(int _id_equipo, string _nombre, int _id_unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoConEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Process_APP_Desk.ServiceProcess_Equipo.Equipo TraerEquipoConEntidad_Escritorio(int _id_equipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoConEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<Process_APP_Desk.ServiceProcess_Equipo.Equipo> TraerEquipoConEntidad_EscritorioAsync(int _id_equipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoPorClaveSinEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TraerEquipoPorClaveSinEntidad_Escritorio(int _id_unidad, string _rut_empresa, string _clave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoPorClaveSinEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TraerEquipoPorClaveSinEntidad_EscritorioAsync(int _id_unidad, string _rut_empresa, string _clave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoPorEmpresaPorUnidadSinEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TraerEquipoPorEmpresaPorUnidadSinEntidad_Escritorio(int _id_unidad, string _rut_empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoPorEmpresaPorUnidadSinEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TraerEquipoPorEmpresaPorUnidadSinEntidad_EscritorioAsync(int _id_unidad, string _rut_empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoPorNombreSinEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TraerEquipoPorNombreSinEntidad_Escritorio(string _nombre, int _id_unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoPorNombreSinEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TraerEquipoPorNombreSinEntidad_EscritorioAsync(string _nombre, int _id_unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoPorNombreConEntidad_Escritorio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Process_APP_Desk.ServiceProcess_Equipo.Equipo TraerEquipoPorNombreConEntidad_Escritorio(string _nombre, int _id_unidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TraerEquipoPorNombreConEntidad_Escritorio", ReplyAction="*")]
        System.Threading.Tasks.Task<Process_APP_Desk.ServiceProcess_Equipo.Equipo> TraerEquipoPorNombreConEntidad_EscritorioAsync(string _nombre, int _id_unidad);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Equipo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int id_equipoField;
        
        private string nombreField;
        
        private int id_unidadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id_equipo {
            get {
                return this.id_equipoField;
            }
            set {
                this.id_equipoField = value;
                this.RaisePropertyChanged("Id_equipo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
                this.RaisePropertyChanged("Nombre");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Id_unidad {
            get {
                return this.id_unidadField;
            }
            set {
                this.id_unidadField = value;
                this.RaisePropertyChanged("Id_unidad");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Process_EquipoSoapChannel : Process_APP_Desk.ServiceProcess_Equipo.Process_EquipoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Process_EquipoSoapClient : System.ServiceModel.ClientBase<Process_APP_Desk.ServiceProcess_Equipo.Process_EquipoSoap>, Process_APP_Desk.ServiceProcess_Equipo.Process_EquipoSoap {
        
        public Process_EquipoSoapClient() {
        }
        
        public Process_EquipoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Process_EquipoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Process_EquipoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Process_EquipoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertarEquipoSinEntidad_Escritorio(string _nombre, int _id_unidad) {
            return base.Channel.InsertarEquipoSinEntidad_Escritorio(_nombre, _id_unidad);
        }
        
        public System.Threading.Tasks.Task<int> InsertarEquipoSinEntidad_EscritorioAsync(string _nombre, int _id_unidad) {
            return base.Channel.InsertarEquipoSinEntidad_EscritorioAsync(_nombre, _id_unidad);
        }
        
        public int ActualizarEquipoSinEntidad_Escritorio(int _id_equipo, string _nombre, int _id_unidad) {
            return base.Channel.ActualizarEquipoSinEntidad_Escritorio(_id_equipo, _nombre, _id_unidad);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarEquipoSinEntidad_EscritorioAsync(int _id_equipo, string _nombre, int _id_unidad) {
            return base.Channel.ActualizarEquipoSinEntidad_EscritorioAsync(_id_equipo, _nombre, _id_unidad);
        }
        
        public Process_APP_Desk.ServiceProcess_Equipo.Equipo TraerEquipoConEntidad_Escritorio(int _id_equipo) {
            return base.Channel.TraerEquipoConEntidad_Escritorio(_id_equipo);
        }
        
        public System.Threading.Tasks.Task<Process_APP_Desk.ServiceProcess_Equipo.Equipo> TraerEquipoConEntidad_EscritorioAsync(int _id_equipo) {
            return base.Channel.TraerEquipoConEntidad_EscritorioAsync(_id_equipo);
        }
        
        public System.Data.DataSet TraerEquipoPorClaveSinEntidad_Escritorio(int _id_unidad, string _rut_empresa, string _clave) {
            return base.Channel.TraerEquipoPorClaveSinEntidad_Escritorio(_id_unidad, _rut_empresa, _clave);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TraerEquipoPorClaveSinEntidad_EscritorioAsync(int _id_unidad, string _rut_empresa, string _clave) {
            return base.Channel.TraerEquipoPorClaveSinEntidad_EscritorioAsync(_id_unidad, _rut_empresa, _clave);
        }
        
        public System.Data.DataSet TraerEquipoPorEmpresaPorUnidadSinEntidad_Escritorio(int _id_unidad, string _rut_empresa) {
            return base.Channel.TraerEquipoPorEmpresaPorUnidadSinEntidad_Escritorio(_id_unidad, _rut_empresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TraerEquipoPorEmpresaPorUnidadSinEntidad_EscritorioAsync(int _id_unidad, string _rut_empresa) {
            return base.Channel.TraerEquipoPorEmpresaPorUnidadSinEntidad_EscritorioAsync(_id_unidad, _rut_empresa);
        }
        
        public System.Data.DataSet TraerEquipoPorNombreSinEntidad_Escritorio(string _nombre, int _id_unidad) {
            return base.Channel.TraerEquipoPorNombreSinEntidad_Escritorio(_nombre, _id_unidad);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TraerEquipoPorNombreSinEntidad_EscritorioAsync(string _nombre, int _id_unidad) {
            return base.Channel.TraerEquipoPorNombreSinEntidad_EscritorioAsync(_nombre, _id_unidad);
        }
        
        public Process_APP_Desk.ServiceProcess_Equipo.Equipo TraerEquipoPorNombreConEntidad_Escritorio(string _nombre, int _id_unidad) {
            return base.Channel.TraerEquipoPorNombreConEntidad_Escritorio(_nombre, _id_unidad);
        }
        
        public System.Threading.Tasks.Task<Process_APP_Desk.ServiceProcess_Equipo.Equipo> TraerEquipoPorNombreConEntidad_EscritorioAsync(string _nombre, int _id_unidad) {
            return base.Channel.TraerEquipoPorNombreConEntidad_EscritorioAsync(_nombre, _id_unidad);
        }
    }
}
